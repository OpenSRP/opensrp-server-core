# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run-unit-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
       submodules: recursive
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Set up CouchDB
      uses: "cobot/couchdb-action@master"
      with:
        couchdb version: '2.3.1'
    - name: Configure Couchdb admin user
      run: |
         curl -X PUT http://localhost:5984/_config/admins/rootuser -d '"adminpass"'
    - name: Setup Postgres with Postgis
      uses: huaxk/postgresql-action@v1
      with:
        postgresql version:  '11'  # See https://hub.docker.com/_/postgres for available versions
        postgresql db:       'opensrp_test'
        postgresql user:     'opensrp_admin'
        postgresql password: 'admin'
        
    - name: Setup rabbitmq
      uses: getong/rabbitmq-action@v1.2
      with:
       rabbitmq version: '3.8.2-management-alpine'
       host port: 5672
       rabbitmq user: 'guest'
       rabbitmq password: 'guest'
       rabbitmq vhost: 'localhost'
       
    - name: Show running services
      run: sudo netstat -tuplen # listing all the port for debug purpose.
      
    - name: Configure migrations
      run: chmod +x configs/assets/migrations/run_mybatis_migrations.sh && sudo ./configs/assets/migrations/run_mybatis_migrations.sh
      
    - name: Create multimedia dir
      run: sudo mkdir -p /opt/multimedia && id
           
    - name: Run Unit tests with Maven
      run: mvn -B clean test jacoco:report --file pom.xml --no-transfer-progress
    - name: Set Branch name Environment variable 
      env:
        BRANCH_NAME_OR_REF: ${{ github.head_ref || github.ref }}
      run: echo "BRANCH_NAME=${BRANCH_NAME_OR_REF#refs/heads/}" >> $GITHUB_ENV
    - name: Set PR Number Environment variable 
      run: |
        echo "PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
    - name: Upload coveralls report
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
         mvn -B coveralls:report --file pom.xml \
          --no-transfer-progress \
          -D repoToken="$COVERALLS_REPO_TOKEN" \
          -D serviceName=Github \
          -D branch="$BRANCH_NAME" \
          -D pullRequest="$PR_NUMBER" \
