<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.opensrp.repository.postgres.mapper.custom.CustomLocationMetadataMapper">

	<sql id="Base_Column_List">
		l.id, l.json
	</sql>
	
	<sql id="No_Geometry_Column_List">
		l.id, l.json - 'geometry' as json
	</sql>
	
	

	<select id="findById" parameterType="java.lang.String"
		resultMap="org.opensrp.repository.postgres.mapper.LocationMapper.BaseResultMap">
		select
		<if test="geometry">
			<include refid="Base_Column_List" />
		</if>

		<if test="!geometry">
			<include refid="No_Geometry_Column_List" />
		</if>
		from core.location_metadata lm
		join core.location l on lm.location_id = l.id
		where lm.geojson_id = #{id,jdbcType=VARCHAR}
	</select>


	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and lm.${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and lm.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and lm.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and lm.${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="selectMany"
		resultMap="org.opensrp.repository.postgres.mapper.LocationMapper.BaseResultMap">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from core.location_metadata lm
		join core.location l on lm.location_id = l.id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}
	</select>
	
	
	<select id="selectManyByProperties"
		resultMap="org.opensrp.repository.postgres.mapper.LocationMapper.BaseResultMap">
		select
		<if test="example.distinct">
			distinct
		</if>

		<if test="geometry">
				<include refid="Base_Column_List" />
		</if>

		<if test="!geometry">
				<include refid="No_Geometry_Column_List" />
		</if>

		from core.location_metadata lm
		join core.location l on lm.location_id = l.id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="properties != null" >
			<trim prefix="and "  >		
				<foreach collection="properties" index="propertyName"
					item="propertyValue" separator=" and ">
					json -> 'properties' ->> #{propertyName,jdbcType=VARCHAR} = #{propertyValue,jdbcType=VARCHAR}
				</foreach>
			</trim>
		</if>
		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="selectManyWithOptionalGeometry"
			resultMap="org.opensrp.repository.postgres.mapper.LocationMapper.BaseResultMap">

		select
		<if test="example.distinct">
			distinct
		</if>

		<if test="geometry">
			<include refid="Base_Column_List" />
		</if>

		<if test="!geometry">
			<include refid="No_Geometry_Column_List" />
		</if>

		from core.location_metadata lm
		join core.location l on lm.location_id = l.id

		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<select id="selectWithChildren"
			resultMap="org.opensrp.repository.postgres.mapper.LocationMapper.BaseResultMap">

		select
		<if test="example.distinct">
			distinct
		</if>

		<if test="geometry">
			<include refid="Base_Column_List" />
		</if>

		<if test="!geometry">
			<include refid="No_Geometry_Column_List" />
		</if>
		from core.location l
		Where l.id in
		(
		WITH RECURSIVE locations
		AS
		( SELECT lm1.geojson_id, lm1.parent_id, lm1.location_id
		FROM core.location_metadata lm1 WHERE geojson_id = #{locationId,jdbcType=VARCHAR}
		UNION
		SELECT lm2.geojson_id, lm2.parent_id, lm2.location_id
		FROM locations lm1
		INNER JOIN core.location_metadata lm2 on lm2.parent_id = lm1.geojson_id )
		SELECT location_id FROM locations
		)

		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}

	</select>

	<resultMap id="DetailsResultMap" type="org.opensrp.domain.LocationDetail">
		<result column="identifier" jdbcType="VARCHAR" property="identifier" />
		<result column="name" jdbcType="VARCHAR" property="name" />
	</resultMap>

	<select id="selectDetailsByPlanId"
			resultMap="DetailsResultMap">

		select
		<if test="example.distinct">
			distinct
		</if>

		pm.operational_area_id as identifier,  lm.name
		FROM core.plan_metadata pm
		JOIN core.location_metadata lm ON pm.operational_area_id = lm.geojson_id
		WHERE pm.identifier = #{planIdentifier,jdbcType=VARCHAR}

		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>

	</select>

	<select id="selectManyIds"	resultType="java.lang.String">
		select
		<if test="example.distinct">
			distinct
		</if>
		geojson_id
		from core.location_metadata lm
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by lm.${example.orderByClause}
		</if>
		LIMIT #{limit} OFFSET #{offset}

	</select>

</mapper>